#encoding:utf-8
class PerformanceSubject < ActiveRecord::Base
  attr_accessible :performance_id, :aim, :assessment, :comment, :leader_mark, :priority_id, :score, :subject, :subject_type
  validates_presence_of :subject
  validate :validate_performance_id, :validate_score

  def validate_performance_id
      if performance_id.nil? then
        errors.add :performance_id, :invalid
      end
  end

  def validate_score
    if !score.blank?
      if !leader_mark.blank?
        if  score < leader_mark
          errors.add :score, ":评分不能大于配分!"
        end
      end
    else
      if !leader_mark.blank?
        errors.add :score, ":配分不能为空!"
      end
    end
  end
end
